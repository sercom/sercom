[global]
# This is where all of your settings go for your development environment
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in 
# sercom/config/app.cfg

# SERCOM

# Máxima cantidad de tiempo de CPU que puede estar ejecutandose el comando
# (en segundos)
#sercom.tester.limits.max_tiempo_cpu = 120

# Máxima cantidad de memoria que puede ocupar el comando (en MiB)
#sercom.tester.limits.max_memoria = 150

# Máximo tamaño de archivo que puede manejar el comando (en MiB)
#sercom.tester.limits.max_tam_archivo = 200

# Máxima cantidad de archivo simultáneos que puede tener abierto el comando
#sercom.tester.limits.max_cant_archivos = 250

# Máxima cantidad de subprocesos que puede crear el pcomando
#sercom.tester.limits.max_cant_procesos = 150

# Máxima cantidad de locks de memoria (memoria que no puede ser swappeada)
# que puede solicitar el comando
#sercom.tester.limits.max_locks_memoria = 500

# Usuario con el cual ejecutar cuando no se necesitan privilegios
#sercom.tester.user = 65534 # usualmente 'nobody'

# Usuario con el cual ejecutar comandos
#sercom.tester.chroot.user = 65534 # usualmente 'nobody'

# Directorio de origen para sincronizar el chroot 'sandbox'
#sercom.tester.chroot.source.dir = "var/chroot"

# Directorio destino para el 'sandbox' donde se realiza el chroot y se corregen las entregas
#sercom.tester.chroot.target.dir = "var/chroot_pepe"

# Directorio de home dentro del sandbox. Donde se realizan las operaciones de compilacion y corridas
#sercom.tester.chroot.target.home.dir = "home/sercom"

# Directorio donde se guardan archivos temporales durante la corrida del tester
#sercom.tester.temp.dir = "/tmp/sercom/tester"

####################################
# Configuración recupero de password
sercom.passrecovery.mail_from = 'recovery@7542.fi.uba.ar'
# Tiempo mínimo entre dos mails a la misma dirección en minutos [15]
sercom.passrecovery.between_mails_delay = 15
sercom.passrecovery.send_username = False 

# PANEL DE USUARIO

# Permitir cambio de nombre al usuario [False]
sercom.user_panel.name_readonly = True



# DATABASE

# pick the form for your database
# sqlobject.dburi="postgres://username@hostname/databasename"
# sqlobject.dburi="mysql://username:password@hostname:port/databasename"
# sqlobject.dburi="sqlite:///file_name_and_path"

# If you have sqlite, here's a simple default to get you started
# in development
sqlobject.dburi="sqlite://%(current_dir_uri)s/devdata.sqlite"


# if you are using a database or table type without transactions
# (MySQL default, for example), you should turn off transactions
# by prepending notrans_ on the uri
# sqlobject.dburi="notrans_mysql://username:password@hostname:port/databasename"

# for Windows users, sqlite URIs look like:
# sqlobject.dburi="sqlite:///drive_letter:/path/to/file"


# SERVER

# Nombre del host servidor 
#server.socket_host="7542.fi.uba.ar"

# Puerto para el host servidor
# server.socket_port=8080

# Enable the production environment
#environment="production"

# Enable the session variables
#tools.sessions.on = True

# The session directory for catwalk
#catwalk.session-dir = "/var/lib/sercom/sercom/sercom/catwalk-session"

# Sets the number of threads the server uses
#server.thread_pool = 8


# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
tg.strict_parameters = True

# Configuración envío de mails
email.smtp_server = "localhost"
email.from_addr = 'sercom@7542.fi.uba.ar'


# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in sercom/config/log.cfg
[logging]

[[handlers]]

[[[console_out]]]
args = "(sys.stdout,)"
class = 'StreamHandler'
level = 'DEBUG'
formatter = 'message_only'

[[[common_file_out]]]
# set the filename as the first argument below
args = "('/var/logs/sercom/common.log',None,10000000,4,)"
class = 'RotatingFileHandler'
level = 'DEBUG'
formatter = 'message_and_time'

[[[tester_file_out]]]
# set the filename as the first argument below
args = "('/var/logs/sercom/tester.log',None,10000000,4,)"
class = 'RotatingFileHandler'
level = 'DEBUG'
formatter = 'full_content'

[[[access_file_out]]]
# set the filename as the first argument below
args = "('/var/logs/sercom/access.log',None,10000000,4,)"
class = 'RotatingFileHandler'
level = 'DEBUG'
formatter = 'message_and_time'

[[[mail_out]]]
# smtp, from, to, subject
args = "('localhost', 'sercom@turing.7542.fi.uba.ar', 'admin@domain.com', 'SERCOM ERROR!!!')"
class = 'handlers.SMTPHandler'
level = 'WARNING'
formatter = 'mail'


[[loggers]]

[[[sercom]]]
level = 'DEBUG'
qualname = 'sercom'
handlers = ['console_out','common_file_out','mail_out']

[[[sercom.tester]]]
level = 'DEBUG'
qualname = 'sercom.tester'
handlers = ['console_out','tester_file_out','mail_out']
propagate = 0

[[[allinfo]]]
level = 'INFO'
handlers = ['console_out','common_file_out']

[[[access]]]
level = 'DEBUG'
qualname = 'cherrypy.access'
handlers = ['console_out','access_file_out']
propagate = 1

